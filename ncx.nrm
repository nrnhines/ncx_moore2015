/*
?0 GUI NEURONDemonstrations Release Code
*/
help ?0
//next 3 lines for procedures to work
objectvar save_window_, rvp_
objectvar scene_vector_[3]
objectvar ocbox_, ocbox_list_, scene_, scene_list_

create terminal
access terminal

{nseg=1 L=10 diam=1}

celsius = 16.3

{insert hh insert cachan  insert cadifpmp insert ncx insert naicum}

proc set_al() {
	al_trel = alnorm*1e4^(power_trel - 2)
}

//Add Panel & Graph Manager
{
xpanel("Panel & Graph Manager", 0)
xlabel("Presynaptic intracellular [Ca] views of")
xlabel("spatial & temporal distributions")
xlabel("Inserted: Ca Channels & Pump")
xlabel("Inserted: HH Chans, Buffer")
//xbutton("Insert Ca channels","hhbuffca()")
//xbutton("Insert the Ca Pump","hhbuffcapump()")
ncx_active_ = 0
nao_reduced_ = 0
cachan_active_ = 1
xcheckbox("NCX active", &ncx_active_, "ncx_active(ncx_active_)")
xbutton("Show ncx Reversal Potential","VsvsT()")
xbutton("Show Ca Reversal Potential","EcavsT()")
xcheckbox("Nao reduced by 30%", &nao_reduced_, "nao_reduced(nao_reduced_)")
xcheckbox("Ca channel active", &cachan_active_, "cachan_active(cachan_active_)")
xbutton("Print","printing()")
//xbutton("Currents vs Time","currs()")
//xbutton("Intracellular Ca","cais()")
//xbutton("Flux Parameters","fluxes()")

xbutton("Quit","if (boolean_dialog(\"Confirm Quit?\", \"Yes\", \"No\")) quit ()")
xpanel(0,2)
}
//End Panel Manager



proc default() {
	//e_pas = -53.1 / below change is to minimize RP change from -65 init
	//e_pas = -65
        k1_cadifpmp = 30e8
        k2_cadifpmp = .25e6
        k3_cadifpmp = 1.5e3
        k4_cadifpmp = 5e0
	pump0_cadifpmp = 1e-13

	beta_cadifpmp = 100

	//kmp_capump=.2  vmax_capump=.0667*0

	pcabar_cachan=2.5e-5
	//gnabar_HHna=.120
	//gkbar_HHk=.036
	k_ncx=.000
	cao0_ca_ion = 2		// these global variables initialize cao/cai
	cai0_ca_ion = 2e-6
	nao=115
	nai=15.7
	ion_style("na_ion", 1, 2, 1, 0, 0)	// ena initialized from constant nai/nao
        GenVes_trel=.0004
        tauGen_trel=10
        al_trel= 7.5e5
        power_trel=2
	alnorm = 75
	set_al()
}
default()

proc releasemenubody() {
/*
? Releasevariables
*/
        xpanel("Release variables")
        xvalue("tauGen","tauGen_trel",1)
        xvalue("Ach Gen rate","Agen_trel",1)
        xvalue("Ach Split rate","Aase_trel",1)   
        xvalue("power","power_trel",1, "set_al()")   
        xvalue("al (norm)","alnorm",1, "set_al()")
        xvalue("Kd","Kd_trel",1)
        xpanel()
}

proc fluxmenubody() {
/*
? ionfluxes
*/
	xpanel("ion fluxes")
	xvalue("kinetic pmp", "pump0_cadifpmp",1)

	xvalue("beta","beta_cadifpmp", 1)

	//xvalue("kmp","kmp_capump", 1)
	//xvalue("vmax","vmax_capump", 1)

	xvalue("pcabar","pcabar_cachan", 1)
	xvalue("gnabar","gnabar_HHna", 1)
	xvalue("gkbar","gkbar_HHk", 1)
	xvalue("k exchange","k_ncx", 1)
	xvalue("nao", "nao", 1, "init()")
	xvalue("cai init","cai0_ca_ion", 1, "init()")
	xpanel()
}

objectvar relmenu
/*
relmenu = new VBox()
relmenu.intercept(1)
releasemenubody()
relmenu.intercept(0)
relmenu.map("Release Variables", 5, 650, 100, 100)
*/

objectvar fluxmenu
/*
fluxmenu = new VBox()
fluxmenu.intercept(1)
fluxmenubody()
fluxmenu.intercept(0)
fluxmenu.map("Ion Fluxes", 250, 130, 100, 100)
*/
{xopen("testca.hoc")}

proc init() {local ca
	finitialize(v_init)
	fcurrent()
	integ_ica()
	Cainchan=0
	Cainncx = 0
	Caoutpump=0
	Caoutncx=0
	incremca=0
	frecord_init()
}

proc advance() {fadvance() integ_ica()}

// integrate

proc  advance()	{	
	fadvance()	Cainchan=(Cainchan- ica_cachan*dt)
				Caoutpump= Caoutpump+ica_pmp_cadifpmp*dt
				
				if (ica_ncx > 0) ica_ncxpmp=ica_ncx
				Caoutncx= Caoutncx + ica_ncxpmp*dt
				
				if (ica_ncx < 0) incremca= -ica_ncx
				Cainncx =  Cainncx + incremca*dt
}

/*
objectvar e
e = new Electrode(0)
e.stim.amp=.08
e.stim.del=.25
e.vc.dur[1]=3
e.map(5, 50)
e.installIclamp()
*/
proc destroy() {
	objectvar relmenu, fluxmenu
	execute("~proc init(){finitialize(v_init) fcurrent()}")
	execute("~proc advance(){fadvance()}")
}

//VvsT
proc vvst()	{
objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{
save_window_ = new Graph(0)
save_window_.size(0,5,-80,40)
scene_vector_[3] = save_window_
{save_window_.view(0, -80, 5, 120, 525, 22, 433, 173)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("terminal.v( 0.5 )", 1, 2, 1.00183, 0.931589, 2)
save_window_.label(0.351039, 0.907514, "Membrane Voltage vs Time", 2, 1, 0, 0, 1)
save_window_.label(0.034642, 0.774566, "mV", 2, 1, 0, 0, 1)
save_window_.label(0.803695, 0.531792, "ms", 2, 1, 0, 0, 1)
}
objectvar scene_vector_[1]
{doNotify()}
}

//Ach and vvsT
proc ach()	{
objectvar save_window_, rvp_
objectvar scene_vector_[17]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}

{
save_window_ = new Graph(0)
save_window_.size(0,5,-80,40)
scene_vector_[8] = save_window_
{save_window_.view(0, -80, 5, 120, 482, 24, 433, 173)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("terminal.v( 0.5 )", 1, 1, 0.553797, 0.873786, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,5,-80,40)
scene_vector_[13] = save_window_
{save_window_.view(0, -80, 5, 120, 480, 23, 433, 173)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("terminal.v( 0.5 )", 1, 1, 0.440633, 0.353555, 2)
save_window_.addexpr("terminal.Ach_trel( 0.5 )*2.5e+12", 6, 2, 0.993995, 0.645665, 2)
save_window_.label(0.540416, 0.867052, "{Ach] in cleft", 2, 1, 0, 0, 6)
}
objectvar scene_vector_[1]
{doNotify()}
}




//Begin I/V Clamp Electrode
{
load_file("electrod.hoc")
}
{
ocbox_=new Electrode(0)
execute("can_locate=1 sec=\"terminal\" xloc=0.5 locate(0)", ocbox_)
execute("vc.dur[0]=0.1 vc.amp[0]=-65", ocbox_)
execute("vc.dur[1]=2.5 vc.amp[1]=10", ocbox_)
execute("vc.dur[2]=100 vc.amp[2]=-65", ocbox_)
execute("stim.del=0.1 stim.dur=0.1 stim.amp=0.05", ocbox_)
execute("vcsteps=5", ocbox_)
execute("samp=stim.amp  store_vclamp() glyph()", ocbox_)
ocbox_ = ocbox_.v1
ocbox_.map("Stimulus Control", 0, 320, 216, 300)
}
objref ocbox_
//End I/V Clamp Electrode

objectvar scene_vector_[1]
{doNotify()}

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Reset","v_init", 1,"stdinit()", 1, 1 )
xbutton("Reset & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
//xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
//xbutton("Single Step","steprun()")
t = 0
xvalue("time","t", 2 )
tstop = 5
xvalue("Total run time ","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
//xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
//xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
//xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0
//xvalue("Real Time","realtime", 0,"", 0, 1 )
celsius=16.3
xvalue("Temp","celsius", 1, "", 0, 1)
xpanel(247,22)
}
objectvar scene_vector_[1]
{doNotify()}

proc currs()	{
objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{
save_window_ = new Graph(0)
save_window_.size(-0.1,5,-0.025,0.01)
scene_vector_[5] = save_window_
{save_window_.view(-0.1, -0.025, 5.1, 0.035, 527, 227, 431, 195)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("total ica", "ica", 1, 2, 0.59998, 0.904465, 2)
save_window_.addexpr("ncx ica", "ica_ncx", 2, 2, 0.608758, 0.633525, 2)
save_window_.addexpr("pump ica", "ica_pmp_cadifpmp", 3, 2, 0.600218, 0.977179, 2)
save_window_.addexpr("channel ica", "ica_cachan", 4, 2, 3.09418, 0.000695447, 1)
save_window_.label(0.104408, 0.835897, "mA/cm2", 2, 1, 0, 0, 1)
}
objectvar scene_vector_[1]
{doNotify()}}

proc cais()	{
objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{
save_window_ = new Graph(0)
save_window_.size(-0.13,5,-9.99999e-08,4e-05)
scene_vector_[4] = save_window_
{save_window_.view(-0.13, -9.99999e-08, 5.13, 4.01e-05, 525, 447, 431, 259)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("cai", 2, 2, 0.480531, 0.70187, 2)
save_window_.addexpr("ca_cadifpmp[8]", 1, 2, 0.627881, 0.554007, 2)
save_window_.addexpr("ca_cadifpmp[4]", 3, 2, 0.558759, 0.683747, 2)
save_window_.addexpr("ca_cadifpmp[20]", 5, 2, 0.697687, 0.50079, 2)
save_window_.addexpr("ca_cadifpmp[12]", 6, 2, 0.671233, 0.628727, 2)
save_window_.label(0.0406875, 0.806082, "mM", 2, 1, 0, 0, 1)
save_window_.label(0.803131, 0.0193798, "ms", 2, 1, 0, 0, 1)
save_window_.label(0.363218, 0.930502, "[Ca] at selected Annuli ", 2, 1, 0, 0, 1)
}
objectvar scene_vector_[1]
{doNotify()}

}

proc fluxes()	{
objectvar save_window_, rvp_
objectvar scene_vector_[3]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{
xpanel("Terminal Parameters", 0)
xlabel("Diameter = 1uM, Length = 10uM")
pump0_cadifpmp = 1.e-13
xvalue("Ca pump","pump0_cadifpmp", 1,"", 0, 0 )
beta_cadifpmp = 100
xvalue("Ratio Bound / Free Ca","beta_cadifpmp", 1,"", 0, 0 )
pcabar_cachan = 2.5e-05
//pca=pcabar_cachan
xvalue("Ca chan permeab.","pcabar_cachan", 1,"", 0, 0 )
k_ncx = 0.00
xvalue("Na/Ca Exchanger","k_ncx", 1,"", 0, 0 )
terminal.kcra_ncx = 0.0003
xvalue("Kcra","terminal.kcra_ncx", 1,"", 0, 0 )
//terminal.vmax_capump = 0.06
//xvalue("vmax_capump","terminal.vmax_capump", 1,"", 0, 0 )
//terminal.kmp_capump = 0.2
//xvalue("kmp_capump","terminal.kmp_capump", 1,"", 0, 0 )
gnabar_hh = 0.12
xvalue("gnabar","gnabar_hh", 1,"", 0, 0 )
gkbar_hh = 0.036
xvalue("gkbar","gkbar_hh", 1,"", 0, 0 )
gl_hh = 0.0003
xvalue("gl_hh","gl_hh", 1,"", 0, 0 )
el_hh = -54.3
//xvalue("el_hh","el_hh", 1,"", 0, 0 )
ek = -77
xvalue("Ek","ek")
terminal.nai = 15.906
xvalue("Nai","terminal.nai",1,"",0,0)
nao = 115
xvalue("Nao","nao", 1,"init()", 0, 0 )
ena=50.799
xvalue("Ena","ena")
cai0_ca_ion = 1e-06
xvalue("[Ca] in","cai0_ca_ion", 1,"init()", 0, 0 )
cao0_ca_ion = 2		// these global variables initialize cao/cai
xvalue("[Ca] out","cao0_ca_ion", 1,"init()", 0, 0 )
eca=180.92
xvalue("Eca","eca")
xpanel(224,235)
}
objectvar scene_vector_[1]
{doNotify()}
}

proc VsvsT()	{
objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{
save_window_ = new Graph(0)
save_window_.size(0,5,-75,55)
scene_vector_[6] = save_window_
{save_window_.view(0, -75, 5, 130, 523, 22, 433, 173)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.label(0.351039, 0.907514, "Membrane Voltage vs Time", 2, 1, 0, 0, 1)
save_window_.label(0.034642, 0.774566, "mV", 2, 1, 0, 0, 1)
save_window_.label(0.796767, 0.456647, "msec", 2, 1, 0, 0, 1)
save_window_.addexpr("terminal.v( 0.5 )", 1, 2, 1.00183, 0.931589, 2)
save_window_.addexpr("ex_ncx", 6, 1, 0.99980139, 0.356647, 2)
save_window_.addexpr("ena", 2, 2, 0.99987067, 1.04451, 2)
save_window_.addexpr("ek", 3, 2, 0.99973211, 0.420232, 2)
save_window_.addexpr("v( 0.5 )-ex_ncx", 4, 2, 0.999631, 1.13699, 2)
save_window_.label(0.309469, 0.682081, "Vm - Encx", 2, 1, 0, 0, 4)
save_window_.label(0.429561, 0.242775, "Encx", 2, 1, 0, 0, 6)
save_window_.label(0.230947, 0.104046, "EK", 2, 1, 0, 0, 3)
save_window_.label(0.508083, 0.803468, "ENa", 2, 1, 0, 0, 2)
}
objectvar scene_vector_[1]
{doNotify()}
}

proc EcavsT()	{
objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{
save_window_ = new Graph(0)
save_window_.size(0,5,-80,200)
scene_vector_[5] = save_window_
{save_window_.view(0, -80, 5, 280, 523, 23, 433, 173)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.label(0.351039, 0.907514, "Membrane Voltage vs Time", 2, 1, 0, 0, 1)
save_window_.label(0.0946882, 0.67052, "mV", 2, 1, 0, 0, 1)
save_window_.label(0.789839, 0.208092, "msec", 2, 1, 0, 0, 1)
save_window_.addexpr("terminal.v( 0.5 )", 1, 2, 1.00183, 0.931589, 2)
save_window_.addexpr("ex_ncx", 6, 1, 0.999801, 0.356647, 2)
save_window_.addexpr("ena", 2, 2, 0.999871, 1.04451, 2)
save_window_.addexpr("ek", 3, 2, 0.999732, 0.420232, 2)
save_window_.addexpr("v( 0.5 )-ex_ncx", 4, 2, 0.999631, 1.13699, 2)
save_window_.label(0.249423, 0.549133, "Vm - Encx", 2, 1, 0, 0, 4)
save_window_.label(0.464203, 0.16763, "Encx", 2, 1, 0, 0, 6)
save_window_.label(0.230947, 0.104046, "EK", 2, 1, 0, 0, 3)
save_window_.label(0.51963, 0.520231, "ENa", 2, 1, 0, 0, 2)
save_window_.addvar("terminal.eca( 0.5 )", 1, 1, 1.00092, 0.911561, 2)
save_window_.label(0.286374, 0.763006, "ECa", 2, 1, 0, 0, 1)
}
objectvar scene_vector_[1]
{doNotify()}
}

proc nao_reduced(){
	nao_reduced_ = $1
	if (nao_reduced_) {
		nao = 80.5
	}else{
		nao = 115
	}
}


vvst()
fluxes()
cais()
currs()

xopen("sumcai.ses")
proc hhonly()	{
	//hh channels & buffer; no pump,  no Ca chan, no ncx
	gnabar_hh = .120
	gkbar_hh = 0.036
	gl_hh = 0.0003

	pump0_cadifpmp = 0
	beta_cadifpmp=100
	pcabar_cachan = 0
	k_ncx = 0
}

proc hhbuff()	{
	//hh channels, buffer; no Ca chan, no pump, no ncx
	gnabar_hh = .120
	gkbar_hh = 0.036
	gl_hh = 0.0003
	beta_cadifpmp=100
	pump0_cadifpmp =0
	
	pcabar_cachan = 0
	k_ncx = 0
}

proc hhbuffca()	{
	//hh channels, buffer, Ca chan; no pump, no ncx
	gnabar_hh = .120
	gkbar_hh = 0.036
	gl_hh = 0.0003
	beta_cadifpmp=100
	pcabar_cachan = 2.5e-5
	pump0_cadifpmp = 0
	k_ncx = 0
}


proc hhbuffcapump()	{
	//hh channels,  buffer, Ca chan,  pump; no ncx
	gnabar_hh = .120
	gkbar_hh = 0.036
	gl_hh = 0.0003
	beta_cadifpmp=100
	pcabar_cachan = 2.5e-5
	pump0_cadifpmp = 1e-13
	k_ncx = 0.0
}


proc ncx_active() {
  ncx_active_ = $1
  if (ncx_active_) {
    if (cachan_active_) {
      k_ncx = 0.00125
    }else{
      k_ncx  = 0.002105
    }
  }else{
    k_ncx = 0
  }
}

proc hhbuffcapumpX()	{
	//hh channels,  buffer, Ca chan,  pump, ncx
	gnabar_hh = .120
	gkbar_hh = 0.036
	gl_hh = 0.0003
	beta_cadifpmp=100
	pcabar_cachan = 2.5e-5
	pump0_cadifpmp = 1e-13
	k_ncx = 0.00125
	//VsvsT()
}

proc cachan_active() {
  cachan_active_ = $1
  ncx_active(ncx_active_)
  if (cachan_active_) {
    pcabar_cachan = 2.5e-5
  }else{
    pcabar_cachan = 0
  }
}

proc onlyX()	{
	//hh channels,  buffer, Ca chan,  pump, ncx
	gnabar_hh = .120
	gkbar_hh = 0.036
	gl_hh = 0.0003
	beta_cadifpmp=100
	pcabar_cachan = 0
	pump0_cadifpmp = 1e-13
	k_ncx = 0.002105
}

proc both()	{
	//hh channels,  buffer, Ca chan,  pump, ncx
	gnabar_hh = .120
	gkbar_hh = 0.036
	gl_hh = 0.0003
	beta_cadifpmp=100
	pcabar_cachan = 2.5e-5
	pump0_cadifpmp = 1e-13
	k_ncx = 0.0009
	//VsvsT()
}

hhbuffcapump()

proc printing()	{
objectvar save_window_, rvp_
objectvar scene_vector_[4]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(530,530)}
objectvar scene_vector_[1]
{doNotify()}
}

proc blockcachan()	{
	pcabar_cachan = 0
}

if (unix_mac_pc()==4) {
    printf("%c[2t", 27)
}
